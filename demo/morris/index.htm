<!DOCTYPE HTML>
<html>
<head>
    <title>直棋-九子棋</title>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8">
</head>
<body>
    <canvas id="canvas" width="600" height="700" style="background-color: rgb(222, 222, 222)">
        不支援canvas
    </canvas>
    <br />
    <script type="text/javascript">
        (function() {
            var morris = {
                x: 0,
                y: 0,
                blackOrWhite: 0,
                white_count: 9,
                black_count: 9,
                white_exist: 9,
                black_exist: 9,
                carry: 0,
                carry_y: 0,
                carry_x: 0,
                eat: 0,
                canvas: null,
                ctx: null,
                mousePos:{
                    x: 0,
                    y: 0
                },
                img: new Image(),
                black: new Image(),
                white: new Image(),
                target: new Image(),
                select: new Image(),
                board:
                [
                    [0, 1, 1, 0, 1, 1, 0],
                    [1, 0, 1, 0, 1, 0, 1],
                    [1, 1, 0, 0, 0, 1, 1],
                    [0, 0, 0, 1, 0, 0, 0],
                    [1, 1, 0, 0, 0, 1, 1],
                    [1, 0, 1, 0, 1, 0, 1],
                    [0, 1, 1, 0, 1, 1, 0]
                ],
                init:function() {
                    me = this;
                    this.img.src = "Morris.jpg";
                    this.black.src = "Black.png";
                    this.white.src = "White.png";
                    this.target.src = "target.png";
                    this.select.src = "select.png";
                    this.canvas = document.getElementById('canvas');
                    this.ctx = this.canvas.getContext('2d');
                    this.canvas.addEventListener('mousemove', function(evt) {
                        me.mousePos.x = evt.clientX - me.canvas.getBoundingClientRect().left;
                        me.mousePos.y = evt.clientY - me.canvas.getBoundingClientRect().top;
                        me.x =  Math.round((me.mousePos.x - 72) / 76);
                        me.y =  Math.round((me.mousePos.y - 72) / 76);
                        var message = 'Mouse: ' + me.mousePos.x + ',' + me.mousePos.y + '(' + me.x + ',' + me.y + ')';
                        me.drowBoard(message);
                    }, false);
                    this.canvas.addEventListener('mousedown', function() {
                        me.main();
                    }, false);
                },
                main: function() {
                    var black = (!this.blackOrWhite && this.black_count > 0);//黑方放棋子 
                    var write = (this.blackOrWhite && this.white_count > 0);//白方放棋子
                    if (this.eat)
                    {
                        if (this.blackOrWhite + 2 == this.board[this.y][this.x])
                        {
                            this.eat = 0;
                            this.board[this.y][this.x] = 0;
                            if (this.blackOrWhite)
                            {
                                this.white_exist--;
                            }
                            else
                            {
                                this.black_exist--;
                            }
                        }
                    }
                    else if (black || write)//判斷其中一方還可以放棋子
                    {
                        if(this.board[this.y][this.x] == 0)//判斷目的地是空的 
                        {
                            if (black)//假如輪到黑子 
                            {
                                this.black_count --;
                            }
                            else//假如輪到白子 
                            {
                                this.white_count --;
                            }
                            this.putChess();
                        }
                    }
                    else if (this.blackOrWhite + 2 == this.board[this.y][this.x])//可以移動的棋子
                    {
                        this.carry = 1;
                        this.carry_x = this.x;
                        this.carry_y = this.y;
                    }
                    else if (this.carry && 0 == this.board[this.y][this.x] && this.isNear())//可以放移動的棋子 
                    {
                        this.putChess();
                    }
                },
                abs: function(num) {
                    if (num < 0)
                        return -num;
                    else
                        return num;
                },
                isNear: function() {//判斷是不是可以移動的位置 
                    if (this.black_exist == 3 && this.board[this.carry_y][this.carry_x] == 2)
                    {
                        return 1;
                    }
                    else if (this.white_exist == 3 && this.board[this.carry_y][this.carry_x] == 3)
                    {
                        return 1;
                    }
                    if (this.x == this.carry_x)
                    {
                        var from_y = (this.y > this.carry_y ? this.carry_y : this.y) + 1;
                        var to_y = (this.y > this.carry_y ? this.y : this.carry_y);
                        for (var col = from_y; col < to_y; col ++)
                        {
                            if (this.board[col][this.x] != 1)//假如經過點 
                            {
                                return 0;
                            }
                            else if (col == 3 && this.carry_y == 3)//假如過正中間
                            {
                                return 0;
                            }
                        }
                        return 1;
                    }
                    else if (this.y == this.carry_y)
                    {
                        var from_x = (this.x > this.carry_x ? this.carry_x : this.x) + 1;
                        var to_x = (this.x > this.carry_x ? this.x : this.carry_x);
                        for (var row = from_x; row < to_x; row ++)
                        {
                            if (this.board[this.y][row] != 1)//假如經過點
                            {
                                return 0;
                            }
                            else if (row == 3 && this.carry_x == 3)//假如過正中間 
                            {
                                return 0;
                            }
                        }
                        return 1;
                    }
                    return 0;
                },
                putChess: function() {
                    if (this.carry)
                    {
                        this.carry = 0;
                        this.board[this.carry_y][this.carry_x] = 0;
                    }
                    this.board[this.y][this.x] = this.blackOrWhite + 2; 
                    this.blackOrWhite = 1 - this.blackOrWhite;//交換棋權 
                    var row_count = 0,col_count = 0;
                    for (var num = 0; num < 3; num ++)
                    {
                        switch (this.abs(3 - this.y))
                        {
                            case 0:
                                if (this.board[this.y][num + (this.x > 3 ? 4 : 0)] == 3 - this.blackOrWhite)
                                {
                                    row_count ++;
                                }
                                break;
                            default:
                                if (this.board[this.y][3 + (num - 1) * this.abs(3 - this.y)] == 3 - this.blackOrWhite)
                                {
                                    row_count ++;
                                }
                                break;
                        }
                        switch (this.abs(3 - this.x))
                        {
                            case 0:
                                if (this.board[num + (this.y > 3 ? 4 : 0)][this.x] == 3 - this.blackOrWhite)
                                {
                                    col_count ++;
                                }
                                break;
                            default:
                                if (this.board[3 + (num - 1) * this.abs(3 - this.x)][this.x] == 3 - this.blackOrWhite)
                                {
                                    col_count ++;
                                }
                                break;
                        }
                    }
                    if (col_count == 3 || row_count == 3) this.eat = 1;//判斷是否連成一條線
                },
                drowBoard: function(message) {
                    this.ctx.clearRect(0, 0, 600, 700);
                    this.ctx.drawImage(this.img, 0, 0);
                    this.ctx.font = '18pt Calibri';
                    this.ctx.fillStyle = 'black';
                    this.ctx.fillText(message, 10, 625);
                    if (this.x < 7 && this.x > -1)
                    {
                        if (this.y < 7 && this.y > -1)
                        {
                            this.ctx.drawImage(this.target, this.x * 76 + 48, this.y * 76 + 48);
                        }
                    }
                    if (this.carry)
                    {
                        this.ctx.drawImage(this.select, this.carry_x * 76 + 48, this.carry_y * 76 + 48);
                    }
                    for (var col = 0;col < 7;col ++)
                    {
                        for (var row = 0;row < 7;row ++)
                        {
                            //畫盤面上的棋子 
                            if (this.board[col][row] == 2)
                            {
                                
                                this.ctx.drawImage(this.black, row * 76 + 48, col * 76 + 48);
                            }
                            else if (this.board[col][row] == 3)
                            {
                                this.ctx.drawImage(this.white, row * 76 + 48, col * 76 + 48);
                            }
                        }
                    }
                    if (this.black_exist < 3)
                    {
                        this.ctx.fillText("白方勝!!", 10, 650);
                    }
                    else if (this.white_exist < 3)
                    {
                        this.ctx.fillText("黑方勝!!", 10, 650);
                    }
                    else
                    {
                        if (this.eat)
                        {
                            this.ctx.fillText("可以吃掉一顆:", 10, 650);
                        }
                        else if (!this.black_count && !this.white_count)
                        {
                            this.ctx.fillText("輪到:", 10, 650);
                        } 
                        else
                        {
                            this.ctx.fillText("輪到:", 10, 650);
                        }
                        if(!this.blackOrWhite)
                        {
                            this.ctx.fillText("黑棋", 10, 675);
                        }
                        else
                        {
                            this.ctx.fillText("白棋", 10, 675);
                        }
                    }
                }
            };
            morris.init();
        }) ();
    </script>
</body>
</html>